{
	"id": "3251ef791360679974585b9e09c5ccab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/HDSXKD.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// compiler version must be greater than or equal to 0.8.20 and less than 0.9.0\r\npragma solidity ^0.8.20;\r\n\r\ncontract HDSXKD {\r\n    struct KetQua {\r\n        uint month;\r\n        uint year;\r\n        uint[2] doanhThuBanHangVaCCDV;\r\n        uint[2] loiNhuanGopVeBanHangVaCCDV;\r\n    }\r\n\r\n    address public quanLy;\r\n\r\n    address[] keToan;\r\n\r\n    uint[] giaoDichID;\r\n    mapping(uint256 => KetQua) dSGD;\r\n\r\n    constructor() {\r\n        quanLy = msg.sender;\r\n    }\r\n\r\n    modifier chiQuanLy() {\r\n        require(msg.sender == quanLy, \"Phai la quan ly\");\r\n        _;\r\n    }\r\n\r\n    modifier chiKeToan() {\r\n        bool check = false;\r\n        for (uint i = 0; i < keToan.length; i++) {\r\n            if (msg.sender == keToan[i]) check = true;\r\n        }\r\n        require(check == true, \"Phai la ke toan\");\r\n        _;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contract/HDSXKD.sol": {
				"HDSXKD": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "quanLy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/HDSXKD.sol\":142:854  contract HDSXKD {... */\n  mstore(0x40, 0x80)\n    /* \"contract/HDSXKD.sol\":440:492  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contract/HDSXKD.sol\":474:484  msg.sender */\n  caller\n    /* \"contract/HDSXKD.sol\":465:471  quanLy */\n  0x00\n  dup1\n    /* \"contract/HDSXKD.sol\":465:484  quanLy = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract/HDSXKD.sol\":142:854  contract HDSXKD {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/HDSXKD.sol\":142:854  contract HDSXKD {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a66deb6\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/HDSXKD.sol\":321:342  address public quanLy */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_9:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_14\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_10:\n        /* \"#utility.yul\":328:352   */\n      tag_16\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_18\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209f3d6851683eb7a91044a89f5e223efd14b4d3fbde4bb181ec1a2a1ea8bd51ca64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060ef8061005b5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80638a66deb614602a575b5f80fd5b60306044565b604051603b919060a2565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608e826067565b9050919050565b609c816086565b82525050565b5f60208201905060b35f8301846095565b9291505056fea26469706673582212209f3d6851683eb7a91044a89f5e223efd14b4d3fbde4bb181ec1a2a1ea8bd51ca64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xEF DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A66DEB6 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8E DUP3 PUSH1 0x67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9C DUP2 PUSH1 0x86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB3 PUSH0 DUP4 ADD DUP5 PUSH1 0x95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 RETURNDATASIZE PUSH9 0x51683EB7A91044A89F 0x5E 0x22 RETURNDATACOPY REVERT EQ 0xB4 0xD3 0xFB 0xDE 0x4B 0xB1 DUP2 0xEC BYTE 0x2A 0x1E 0xA8 0xBD MLOAD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "142:712:0:-:0;;;440:52;;;;;;;;;;474:10;465:6;;:19;;;;;;;;;;;;;;;;;;142:712;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@quanLy_16": {
									"entryPoint": 68,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:1",
										"nodeType": "YulBlock",
										"src": "0:590:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c80638a66deb614602a575b5f80fd5b60306044565b604051603b919060a2565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608e826067565b9050919050565b609c816086565b82525050565b5f60208201905060b35f8301846095565b9291505056fea26469706673582212209f3d6851683eb7a91044a89f5e223efd14b4d3fbde4bb181ec1a2a1ea8bd51ca64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A66DEB6 EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8E DUP3 PUSH1 0x67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9C DUP2 PUSH1 0x86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB3 PUSH0 DUP4 ADD DUP5 PUSH1 0x95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 RETURNDATASIZE PUSH9 0x51683EB7A91044A89F 0x5E 0x22 RETURNDATACOPY REVERT EQ 0xB4 0xD3 0xFB 0xDE 0x4B 0xB1 DUP2 0xEC BYTE 0x2A 0x1E 0xA8 0xBD MLOAD 0xCA PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "142:712:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47800",
								"executionCost": "24362",
								"totalCost": "72162"
							},
							"external": {
								"quanLy()": "2483"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 142,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 142,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 854,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 492,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 492,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 492,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 440,
									"end": 492,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 474,
									"end": 484,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 465,
									"end": 471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 465,
									"end": 484,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 465,
									"end": 484,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 465,
									"end": 484,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 465,
									"end": 484,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 854,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 854,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 854,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 854,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 142,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 854,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209f3d6851683eb7a91044a89f5e223efd14b4d3fbde4bb181ec1a2a1ea8bd51ca64736f6c63430008150033",
									".code": [
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "8A66DEB6"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 854,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 321,
											"end": 342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 321,
											"end": 342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 321,
											"end": 342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract/HDSXKD.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"quanLy()": "8a66deb6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"quanLy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/HDSXKD.sol\":\"HDSXKD\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract/HDSXKD.sol\":{\"keccak256\":\"0x2bc884950373bb72b94f2ab03aeef8b391e68128196d39cc7c763fc4662df0e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165463e96ff9037e26d40cf216daa390e1af0a9c48855ffeb642f052dc0f357f\",\"dweb:/ipfs/QmQS8a5zsBwZi7mxvnoVftS58sQCDaARiUhJQMmmitKrSG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "contract/HDSXKD.sol:HDSXKD",
								"label": "quanLy",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "contract/HDSXKD.sol:HDSXKD",
								"label": "keToan",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 22,
								"contract": "contract/HDSXKD.sol:HDSXKD",
								"label": "giaoDichID",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 27,
								"contract": "contract/HDSXKD.sol:HDSXKD",
								"label": "dSGD",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(KetQua)14_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)2_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[2]",
								"numberOfBytes": "64"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_struct(KetQua)14_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct HDSXKD.KetQua)",
								"numberOfBytes": "32",
								"value": "t_struct(KetQua)14_storage"
							},
							"t_struct(KetQua)14_storage": {
								"encoding": "inplace",
								"label": "struct HDSXKD.KetQua",
								"members": [
									{
										"astId": 3,
										"contract": "contract/HDSXKD.sol:HDSXKD",
										"label": "month",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "contract/HDSXKD.sol:HDSXKD",
										"label": "year",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 9,
										"contract": "contract/HDSXKD.sol:HDSXKD",
										"label": "doanhThuBanHangVaCCDV",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_uint256)2_storage"
									},
									{
										"astId": 13,
										"contract": "contract/HDSXKD.sol:HDSXKD",
										"label": "loiNhuanGopVeBanHangVaCCDV",
										"offset": 0,
										"slot": "4",
										"type": "t_array(t_uint256)2_storage"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contract/HDSXKD.sol": {
				"ast": {
					"absolutePath": "contract/HDSXKD.sol",
					"exportedSymbols": {
						"HDSXKD": [
							88
						]
					},
					"id": 89,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "HDSXKD",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "HDSXKD",
							"nameLocation": "151:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "HDSXKD.KetQua",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "month",
											"nameLocation": "195:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "190:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "190:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "year",
											"nameLocation": "216:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "211:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "211:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "doanhThuBanHangVaCCDV",
											"nameLocation": "239:21:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "231:29:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
												"typeString": "uint256[2]"
											},
											"typeName": {
												"baseType": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 8,
												"length": {
													"hexValue": "32",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "236:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"nodeType": "ArrayTypeName",
												"src": "231:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
													"typeString": "uint256[2]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "loiNhuanGopVeBanHangVaCCDV",
											"nameLocation": "279:26:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "271:34:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
												"typeString": "uint256[2]"
											},
											"typeName": {
												"baseType": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 12,
												"length": {
													"hexValue": "32",
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "276:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_2_by_1",
														"typeString": "int_const 2"
													},
													"value": "2"
												},
												"nodeType": "ArrayTypeName",
												"src": "271:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
													"typeString": "uint256[2]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "KetQua",
									"nameLocation": "172:6:0",
									"nodeType": "StructDefinition",
									"scope": 88,
									"src": "165:148:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a66deb6",
									"id": 16,
									"mutability": "mutable",
									"name": "quanLy",
									"nameLocation": "336:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "321:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "keToan",
									"nameLocation": "361:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "351:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 17,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "351:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 18,
										"nodeType": "ArrayTypeName",
										"src": "351:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "giaoDichID",
									"nameLocation": "383:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "376:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 20,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "376:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 21,
										"nodeType": "ArrayTypeName",
										"src": "376:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "dSGD",
									"nameLocation": "427:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "400:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_KetQua_$14_storage_$",
										"typeString": "mapping(uint256 => struct HDSXKD.KetQua)"
									},
									"typeName": {
										"id": 26,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 23,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "408:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "400:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_KetQua_$14_storage_$",
											"typeString": "mapping(uint256 => struct HDSXKD.KetQua)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "KetQua",
												"nameLocations": [
													"419:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 14,
												"src": "419:6:0"
											},
											"referencedDeclaration": 14,
											"src": "419:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_KetQua_$14_storage_ptr",
												"typeString": "struct HDSXKD.KetQua"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "454:38:0",
										"statements": [
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 30,
														"name": "quanLy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "465:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 31,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "474:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "478:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "474:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "465:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "465:19:0"
											}
										]
									},
									"id": 36,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:0:0"
									},
									"scope": 88,
									"src": "440:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "521:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 39,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "544:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "540:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 41,
																"name": "quanLy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "554:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "540:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50686169206c61207175616e206c79",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "562:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_454d3bd77b3123e02ac3898bb7d95bd7f242264b8e5a8552e1a26535ae7b18a7",
																"typeString": "literal_string \"Phai la quan ly\""
															},
															"value": "Phai la quan ly"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_454d3bd77b3123e02ac3898bb7d95bd7f242264b8e5a8552e1a26535ae7b18a7",
																"typeString": "literal_string \"Phai la quan ly\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "532:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "532:48:0"
											},
											{
												"id": 46,
												"nodeType": "PlaceholderStatement",
												"src": "591:1:0"
											}
										]
									},
									"id": 48,
									"name": "chiQuanLy",
									"nameLocation": "509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:0"
									},
									"src": "500:100:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "629:220:0",
										"statements": [
											{
												"assignments": [
													51
												],
												"declarations": [
													{
														"constant": false,
														"id": 51,
														"mutability": "mutable",
														"name": "check",
														"nameLocation": "645:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "640:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 50,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "640:18:0"
											},
											{
												"body": {
													"id": 76,
													"nodeType": "Block",
													"src": "710:68:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 65,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "729:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 66,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "733:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "729:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 67,
																		"name": "keToan",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "743:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 69,
																	"indexExpression": {
																		"id": 68,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 55,
																		"src": "750:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "743:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "729:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 75,
															"nodeType": "IfStatement",
															"src": "725:41:0",
															"trueBody": {
																"expression": {
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 71,
																		"name": "check",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "754:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "74727565",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "762:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "754:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 74,
																"nodeType": "ExpressionStatement",
																"src": "754:12:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "686:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 59,
															"name": "keToan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "697:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "690:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "686:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 77,
												"initializationExpression": {
													"assignments": [
														55
													],
													"declarations": [
														{
															"constant": false,
															"id": 55,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "679:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 77,
															"src": "674:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 54,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "674:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 57,
													"initialValue": {
														"hexValue": "30",
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "674:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "705:3:0",
														"subExpression": {
															"id": 62,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "705:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 64,
													"nodeType": "ExpressionStatement",
													"src": "705:3:0"
												},
												"nodeType": "ForStatement",
												"src": "669:109:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "check",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "796:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "805:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "796:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50686169206c61206b6520746f616e",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "811:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22bd639a653ae7115c8ff34b88823f378e429965d1a7a9a7fa4093e473edcbc5",
																"typeString": "literal_string \"Phai la ke toan\""
															},
															"value": "Phai la ke toan"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22bd639a653ae7115c8ff34b88823f378e429965d1a7a9a7fa4093e473edcbc5",
																"typeString": "literal_string \"Phai la ke toan\""
															}
														],
														"id": 78,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "788:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "788:41:0"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "840:1:0"
											}
										]
									},
									"id": 87,
									"name": "chiKeToan",
									"nameLocation": "617:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:2:0"
									},
									"src": "608:241:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 89,
							"src": "142:712:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:740:0"
				},
				"id": 0
			}
		}
	}
}